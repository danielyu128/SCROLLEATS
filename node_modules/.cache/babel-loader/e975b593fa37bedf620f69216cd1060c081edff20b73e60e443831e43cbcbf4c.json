{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst initialState = {\n  user: null,\n  currentLocation: null,\n  restaurants: [],\n  userRatings: [],\n  favorites: [],\n  isLoading: false,\n  error: null,\n  currentIndex: 0,\n  hasMore: true\n};\nexport const useScrollEatsStore = create()(persist((set, get) => ({\n  ...initialState,\n  setUser: user => set({\n    user\n  }),\n  setCurrentLocation: location => set({\n    currentLocation: location\n  }),\n  addRestaurants: newRestaurants => set(state => ({\n    restaurants: [...state.restaurants, ...newRestaurants]\n  })),\n  setRestaurants: newRestaurants => set({\n    restaurants: newRestaurants\n  }),\n  clearRestaurants: () => set({\n    restaurants: []\n  }),\n  addUserRating: rating => set(state => ({\n    userRatings: [...state.userRatings.filter(r => r.restaurantId !== rating.restaurantId), rating]\n  })),\n  toggleFavorite: restaurantId => set(state => ({\n    favorites: state.favorites.includes(restaurantId) ? state.favorites.filter(id => id !== restaurantId) : [...state.favorites, restaurantId]\n  })),\n  setLoading: isLoading => set({\n    isLoading\n  }),\n  setError: error => set({\n    error\n  }),\n  setCurrentIndex: currentIndex => set({\n    currentIndex\n  }),\n  setHasMore: hasMore => set({\n    hasMore\n  }),\n  resetState: () => set(initialState),\n  canUseSpecialBoom: () => {\n    const state = get();\n    if (!state.lastSpecialBoomUsed) return true;\n    const now = new Date();\n    const lastUsed = new Date(state.lastSpecialBoomUsed);\n    const hoursSinceLastUse = (now.getTime() - lastUsed.getTime()) / (1000 * 60 * 60);\n    return hoursSinceLastUse >= 24;\n  }\n}), {\n  name: 'scrolleats-storage',\n  partialize: state => ({\n    user: state.user,\n    userRatings: state.userRatings,\n    favorites: state.favorites,\n    currentLocation: state.currentLocation,\n    lastSpecialBoomUsed: state.lastSpecialBoomUsed\n  })\n}));","map":{"version":3,"names":["create","persist","initialState","user","currentLocation","restaurants","userRatings","favorites","isLoading","error","currentIndex","hasMore","useScrollEatsStore","set","get","setUser","setCurrentLocation","location","addRestaurants","newRestaurants","state","setRestaurants","clearRestaurants","addUserRating","rating","filter","r","restaurantId","toggleFavorite","includes","id","setLoading","setError","setCurrentIndex","setHasMore","resetState","canUseSpecialBoom","lastSpecialBoomUsed","now","Date","lastUsed","hoursSinceLastUse","getTime","name","partialize"],"sources":["/Users/andrewnguyen/scrollEats/src/store/index.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { AppState, AppActions, User, UserRating, Restaurant } from '../types';\n\ninterface ScrollEatsStore extends AppState, AppActions {\n  lastSpecialBoomUsed?: Date;\n  canUseSpecialBoom: () => boolean;\n}\n\nconst initialState: Omit<AppState, keyof AppActions> = {\n  user: null,\n  currentLocation: null,\n  restaurants: [],\n  userRatings: [],\n  favorites: [],\n  isLoading: false,\n  error: null,\n  currentIndex: 0,\n  hasMore: true,\n};\n\nexport const useScrollEatsStore = create<ScrollEatsStore>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n\n      setUser: (user: User | null) => set({ user }),\n\n      setCurrentLocation: (location: { latitude: number; longitude: number }) =>\n        set({ currentLocation: location }),\n\n      addRestaurants: (newRestaurants: Restaurant[]) =>\n        set((state) => ({\n          restaurants: [...state.restaurants, ...newRestaurants],\n        })),\n\n      setRestaurants: (newRestaurants: Restaurant[]) => set({ restaurants: newRestaurants }),\n\n      clearRestaurants: () => set({ restaurants: [] }),\n\n      addUserRating: (rating: UserRating) =>\n        set((state) => ({\n          userRatings: [\n            ...state.userRatings.filter((r) => r.restaurantId !== rating.restaurantId),\n            rating,\n          ],\n        })),\n\n      toggleFavorite: (restaurantId: string) =>\n        set((state) => ({\n          favorites: state.favorites.includes(restaurantId)\n            ? state.favorites.filter((id) => id !== restaurantId)\n            : [...state.favorites, restaurantId],\n        })),\n\n      setLoading: (isLoading: boolean) => set({ isLoading }),\n\n      setError: (error: string | null) => set({ error }),\n\n      setCurrentIndex: (currentIndex: number) => set({ currentIndex }),\n\n      setHasMore: (hasMore: boolean) => set({ hasMore }),\n\n      resetState: () => set(initialState),\n\n      canUseSpecialBoom: () => {\n        const state = get();\n        if (!state.lastSpecialBoomUsed) return true;\n        \n        const now = new Date();\n        const lastUsed = new Date(state.lastSpecialBoomUsed);\n        const hoursSinceLastUse = (now.getTime() - lastUsed.getTime()) / (1000 * 60 * 60);\n        \n        return hoursSinceLastUse >= 24;\n      },\n    }),\n    {\n      name: 'scrolleats-storage',\n      partialize: (state) => ({\n        user: state.user,\n        userRatings: state.userRatings,\n        favorites: state.favorites,\n        currentLocation: state.currentLocation,\n        lastSpecialBoomUsed: state.lastSpecialBoomUsed,\n      }),\n    }\n  )\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}